{"version":3,"sources":["components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactList.module.css","components/Filter/Filter.module.css","redux/Phonebook/phonebook-actions.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","v4","deleteContact","changeFilter","items","createReducer","actions","state","action","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactsReduser","devTools","process","persistor","persistStore","Container","children","className","styles","container","connect","dispatch","onSubmit","contact","Actions","useState","setName","setNumber","contactNameId","handleChange","e","currentTarget","value","reset","form","preventDefault","options","find","toLowerCase","alert","htmlFor","type","pattern","title","required","onChange","getVisibleTodos","allContacts","normalizedFilter","includes","onDelete","map","item","onClick","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.35e31193.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2cynF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2gbSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3f_Hm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3Hydv\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 } from 'uuid';\n\nconst addContact = createAction('contact/Add', ({ name, number }) => {\n  return {\n    payload: {\n      id: v4(),\n      name,\n      number,\n    },\n  };\n});\nconst deleteContact = createAction('contact/Delete');\nconst changeFilter = createAction('contact/ChangeFilter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, changeFilter };\n\n// варіант без toolkit\n// const addContact = ({ name, number }) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: v4(),\n//     name,\n//     number,\n//   },\n// });\n// const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions from './phonebook-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, action) => [...state, action.payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\nexport default combineReducers({\n  items,\n  filter,\n});\n\n// варіант без toolkit\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return [...state.filter(({ id }) => id !== payload)];\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case 'contact/ChangeFilter':\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n// файл phonebook-type.js видаляємо\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReduser from './Phonebook/phonebook-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReduser),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Actions from '../../redux/Phonebook/phonebook-actions';\n\nimport { v4 } from 'uuid';\n\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit, contacts }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contactNameId = v4();\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const options = { name, number };\n    if (\n      contacts.find(\n        contact => name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else if (contacts.find(contact => number === contact.number)) {\n      alert(`${number} is already exists`);\n    } else {\n      onSubmit(options);\n    }\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label htmlFor={contactNameId}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          id={contactNameId}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nconst mapStateToProps = ({ contacts: { items } }) => ({\n  contacts: items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(Actions.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport Actions from '../../redux/Phonebook/phonebook-actions';\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} name={name} key={id}>\n          {name}: {number}\n          <button type=\"button\" onClick={() => onDelete(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst getVisibleTodos = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleTodos(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(Actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport Actions from '../../redux/Phonebook/phonebook-actions';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.filter}>\n    Find contact by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(Actions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}